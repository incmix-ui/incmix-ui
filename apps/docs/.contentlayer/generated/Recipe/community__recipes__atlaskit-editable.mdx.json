{
  "title": "Atlaskit editable",
  "description": "A well styled editable inspired by the Atlaskit inline edit component",
  "tags": ["editable", "inline-edit", "component"],
  "author": "Jacob Marshall (github.com/jacobhq)",
  "body": {
    "raw": "\nThis example features a tweaked UI, a hover color with dark mode support, and a tooltip. As you can see, we can change the input by setting the `as` prop. This design is inspired by the [Atlassian inline edit](https://atlassian.design/components/inline-edit/examples) component. Read more about the editable [here](/docs/form/editable).\n\nHere are the imports required:\n\n```js live=false\nimport {\n  EditablePreview,\n  Box,\n  useColorModeValue,\n  IconButton,\n  Input,\n  useDisclosure,\n  useEditableControls,\n  ButtonGroup,\n  SlideFade,\n  Editable,\n  Tooltip,\n  EditableInput,\n} from '@incmix-ui/react'\nimport { CheckIcon, CloseIcon } from '@incmix-ui/icons'\n```\n\n```jsx\nfunction App() {\n  /* Here's a custom control */\n  function EditableControls() {\n    const { isEditing, getSubmitButtonProps, getCancelButtonProps, getEditButtonProps } = useEditableControls()\n\n    return isEditing ? (\n      <ButtonGroup justifyContent=\"end\" size=\"sm\" w=\"full\" spacing={2} mt={2}>\n        <IconButton icon={<CheckIcon />} {...getSubmitButtonProps()} />\n        <IconButton icon={<CloseIcon boxSize={3} />} {...getCancelButtonProps()} />\n      </ButtonGroup>\n    ) : null\n  }\n\n  return (\n    <Editable defaultValue=\"Rasengan ⚡️\" isPreviewFocusable={true} selectAllOnFocus={false}>\n      <Tooltip label=\"Click to edit\">\n        <EditablePreview\n          py={2}\n          px={4}\n          _hover={{\n            background: useColorModeValue('gray.100', 'gray.700'),\n          }}\n        />\n      </Tooltip>\n      <Input py={2} px={4} as={EditableInput} />\n      <EditableControls />\n    </Editable>\n  )\n}\n```\n",
    "code": "var Component=(()=>{var u=Object.create;var a=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var g=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),f=(n,e)=>{for(var o in e)a(n,o,{get:e[o],enumerable:!0})},l=(n,e,o,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of h(e))!b.call(n,i)&&i!==o&&a(n,i,{get:()=>e[i],enumerable:!(s=p(e,i))||s.enumerable});return n};var x=(n,e,o)=>(o=n!=null?u(m(n)):{},l(e||!n||!n.__esModule?a(o,\"default\",{value:n,enumerable:!0}):o,n)),C=n=>l(a({},\"__esModule\",{value:!0}),n);var c=g((w,r)=>{r.exports=_jsx_runtime});var j={};f(j,{default:()=>I,frontmatter:()=>E});var t=x(c()),E={title:\"Atlaskit editable\",description:\"A well styled editable inspired by the Atlaskit inline edit component\",tags:[\"editable\",\"inline-edit\",\"component\"],author:\"Jacob Marshall (github.com/jacobhq)\"};function d(n){let e=Object.assign({p:\"p\",code:\"code\",a:\"a\",pre:\"pre\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:[\"This example features a tweaked UI, a hover color with dark mode support, and a tooltip. As you can see, we can change the input by setting the \",(0,t.jsx)(e.code,{children:\"as\"}),\" prop. This design is inspired by the \",(0,t.jsx)(e.a,{href:\"https://atlassian.design/components/inline-edit/examples\",children:\"Atlassian inline edit\"}),\" component. Read more about the editable \",(0,t.jsx)(e.a,{href:\"/docs/form/editable\",children:\"here\"}),\".\"]}),`\n`,(0,t.jsx)(e.p,{children:\"Here are the imports required:\"}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-js\",live:\"false\",children:`import {\n  EditablePreview,\n  Box,\n  useColorModeValue,\n  IconButton,\n  Input,\n  useDisclosure,\n  useEditableControls,\n  ButtonGroup,\n  SlideFade,\n  Editable,\n  Tooltip,\n  EditableInput,\n} from '@incmix-ui/react'\nimport { CheckIcon, CloseIcon } from '@incmix-ui/icons'\n`})}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-jsx\",children:`function App() {\n  /* Here's a custom control */\n  function EditableControls() {\n    const { isEditing, getSubmitButtonProps, getCancelButtonProps, getEditButtonProps } = useEditableControls()\n\n    return isEditing ? (\n      <ButtonGroup justifyContent=\"end\" size=\"sm\" w=\"full\" spacing={2} mt={2}>\n        <IconButton icon={<CheckIcon />} {...getSubmitButtonProps()} />\n        <IconButton icon={<CloseIcon boxSize={3} />} {...getCancelButtonProps()} />\n      </ButtonGroup>\n    ) : null\n  }\n\n  return (\n    <Editable defaultValue=\"Rasengan \\u26A1\\uFE0F\" isPreviewFocusable={true} selectAllOnFocus={false}>\n      <Tooltip label=\"Click to edit\">\n        <EditablePreview\n          py={2}\n          px={4}\n          _hover={{\n            background: useColorModeValue('gray.100', 'gray.700'),\n          }}\n        />\n      </Tooltip>\n      <Input py={2} px={4} as={EditableInput} />\n      <EditableControls />\n    </Editable>\n  )\n}\n`})})]})}function B(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(d,n)})):d(n)}var I=B;return C(j);})();\n;return Component;"
  },
  "_id": "community/recipes/atlaskit-editable.mdx",
  "_raw": {
    "sourceFilePath": "community/recipes/atlaskit-editable.mdx",
    "sourceFileName": "atlaskit-editable.mdx",
    "sourceFileDir": "community/recipes",
    "contentType": "mdx",
    "flattenedPath": "community/recipes/atlaskit-editable"
  },
  "type": "Recipe",
  "slug": "/community/recipes/atlaskit-editable",
  "frontMatter": {
    "title": "Atlaskit editable",
    "description": "A well styled editable inspired by the Atlaskit inline edit component",
    "tags": ["editable", "inline-edit", "component"],
    "author": "Jacob Marshall (github.com/jacobhq)",
    "slug": "/community/community/recipes/atlaskit-editable",
    "editUrl": "https://github.com/incmix-ui/incmix-ui-docs/tree/main/content/community/recipes/atlaskit-editable.mdx",
    "headings": []
  }
}
